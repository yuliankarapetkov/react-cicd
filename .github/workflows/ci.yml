name: CI
on:
  pull_request:
    branches: [develop, master]
  push:
    branches: [develop, master]

jobs:
  # get-next-version:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout branch
  #       uses: actions/checkout@v2

    #   - name: Setup Node version (16.x)
    #     uses: actions/setup-node@v1
    #     with:
    #       node-version: "16.x"

    #   - name: Install dependencies
    #     run: npm ci

    #   - name: Get next version
    #     run: npx semantic-release --dry-run
    #     id: get-next-version
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    # outputs:
    #   published: ${{ steps.get-next-version.outputs.new-release-published }}
    #   version: ${{ steps.get-next-version.outputs.new-release-version }}

  build:
    runs-on: ubuntu-latest
    # needs: get-next-version
    steps:
      - name: Set current version
        run: echo "APP_CURRENT_VERSION=$(npm pkg get version)" >> $GITHUB_ENV

      - name: Print current version
        run: echo " version is $APP_CURRENT_VERSION"

      # - name: Print next version
      #   run: echo "v${{ needs.get-next-version.outputs.version }} (${{ github.sha }})"

      # - name: Checkout branch
      #   uses: actions/checkout@v2

      # - name: Setup Node version (16.x)
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: "16.x"

      # - name: Install dependencies
      #   run: npm ci

      # - name: Check formatting
      #   run: npm run format:check

      # - name: Run tests
      #   run: npm run test -- --coverage
      #   env:
      #     CI: true

      # - name: Create release
      #   if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      #   run: npx semantic-release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
